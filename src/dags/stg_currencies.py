"""\
Выгружает данные о курсах валют из источника S3 и копируюет в Vertica

### Соединения
- `e-commerce-s3 (Amazon WebService)` - соединение с S3-хранилищем
- `e-commerce-vertica (Vertica)` - соединение с Vertica

### Переменные
- `stage-sql-path (str)` - путь к папке с sql-скриптами
"""

from pathlib import Path
import pendulum
from airflow import DAG
from airflow.models import Variable, TaskInstance
from airflow.operators.python import PythonOperator
from airflow.providers.amazon.aws.hooks.s3 import S3Hook
from airflow.providers.vertica.operators.vertica import VerticaOperator


def _load_file_from_s3(
    s3_conn_id: str,
    key: str,
    bucket: str,
    local_path: str,
    ti: TaskInstance,
):
    path = Path(local_path, key)
    if path.is_file():
        ti.log.info("File already exists: %s", path.as_posix())
        return path.resolve().as_posix()
    else:
        s3_hook = S3Hook(s3_conn_id)
        return s3_hook.download_file(
            key=key,
            bucket_name=bucket,
            local_path=local_path,
            preserve_file_name=True,
            use_autogenerated_subdir=False,
        )


with DAG(
    dag_id="stage-currencies",
    description="Загружает данные о курсах валют",
    schedule=None,
    start_date=pendulum.today("UTC").add(days=-1),
    template_searchpath=Variable.get(
        "stage-sql-path",
        "/lessons/sql/stg",
    ),
    default_args={"owner": "badun61"},
    catchup=False,
    doc_md=__doc__,
    is_paused_upon_creation=True,
) as dag:
    download_currencies = PythonOperator(
        task_id="download_currencies",
        python_callable=_load_file_from_s3,
        op_kwargs={
            "s3_conn_id": "e-commerce-s3",
            "key": "currencies_history.csv",
            "bucket": "final-project",
            "local_path": "/lessons/data",
        },
    )

    ensure_tables = VerticaOperator(
        task_id="ensure_tables",
        vertica_conn_id="e-commerce-vertica",
        sql="ddl.sql",
    )

    upload_currencies = VerticaOperator(
        task_id="upload_currencies",
        vertica_conn_id="e-commerce-vertica",
        sql="currencies_to.sql",
    )

    [download_currencies, ensure_tables] >> upload_currencies
